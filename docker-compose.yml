version: '3.3'

services:
  bot:
    image: "${BOT_IMAGE_NAME}"
    container_name: "${BOT_CONTAINER_NAME}"
    stop_signal: SIGINT
    build:
      context: .
    working_dir: "/usr/src/app/${BOT_NAME}"
    volumes:
      - .:/usr/src/app/${BOT_NAME}
    command: python3 -m bot
    restart: always
    env_file:
      - ".env"
    networks:
      - cowparser

    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  redis_cache:
    image: redis:6.2-alpine
    container_name: "${REDIS_CONTAINER_NAME}"
    restart: always
    command: redis-server --port $REDIS_PORT --save 20 1 --loglevel warning --requirepass $REDIS_PASS
    env_file:
      - ".env"
    volumes:
      - ./cache:/data
    networks:
      - cowparser

#  webhook:
#    image: "webhook"
#    container_name: "${WEBHOOK_CONTAINER_NAME}"
#    stop_signal: SIGINT
#    build:
#      context: .
#      dockerfile: infrastructure/webhook/Dockerfile
#    working_dir: "/usr/src/app/${WEBHOOK_APP_NAME}"
#    volumes:
#      - .:/usr/src/app/${WEBHOOK_APP_NAME}
#    command: [ "uvicorn", "infrastructure.webhook.app:app", "--host", "0.0.0.0", "--port", "8000" ]
#    restart: always
#    env_file:
#      - ".env"
#    networks:
#      - cowparser
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "200k"
#        max-file: "10"
#
#  reverse-proxy:
#    container_name: nginx-reverse-proxy
#    stop_signal: SIGINT
#    restart: always
#    image: nginx:latest
#    ports:
#      - '80:80'
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#    networks:
#      - cowparser


networks:
  cowparser:
    driver: bridge
